*E*>?|?*T*|?*IF*|?*FOR*|?*IFUNC*|?*A*;?*E*|*RETURN*?;?*E*
*FE*>?|*T*|*IF*|*FOR*|*A*;?*E*|?*E*
*TYPE*>int|float|bool|char
*FTYPE*>void|*TYPE*
*T*>*TYPE*&*VN*
*VN*>*ivname*?=?*A*?;?*E*|*ivname*?,?*VN*?|*ivname*?;*E*
*A*>*R**A*|?%?*R**A*|?+?*R**A*|?-?*R**A*|?*?*R**A*|?/?*R**A*|?+=?*R**A*|?-=?*R**A*|?*=?*R**A*|?/=?*R**A*|?%=?*R**A*|?>?*R**A*|?<?*R**A*|?>=?*R**A*|?<=?*R**A*|?==?*R**A*|?!=?*R**A*|?
*R*>*V*|*CALL*|*vname*++|*vname*--|++*vname*|--*vname*|(?*R**A*?)*A*|*vname*?=?*R**A*
*V*>*vname*|*number*
*IF*>if?(?*A*?)?{?*E*?}?*ELSE*
*ELSE*>else?{?*E*?}*E*|else?*IF*|*E**A*?
*FOR*>for?(?*T*?*A*;?*A*?)?{?*E*?}?*E*|for?(?*A*?;?*A*?;?*A*?)?{?*E*?}?*E*
*IFUNC*>*FTYPE*&*ifname*?(?*FT*?)?{?*FE*?}?*E*
*FT*>*TYPE*&*ivname*?*FT*|,?*FT*|?
*CALL*>*fname*?*CFA**A*
*CFA*>(?*A*?*CFA*|,?*A*?)|,?*A*?*CFA*|(?*A*?)
*RETURN*>return&*R*?*A*


? - может быть сколько угодно пробелов, переносов строк, знаков табуляции, а может не быть ничего
& - должен быть хотя бы один знак пробела или переноа строк, или табуляция
VN - variable name
ivname - инициализация переменной
vname - использование переменной
ifname - инициализация названия функции
fname - использование функции
IFUNC - init function
FT - принимаемые function type
FTYPE - возвращаемые типы
FE - программа внутри функции(невозможно объявить другую функцию внутри функции)
R - required требует аргумент
CALL- вызов функции
CFA - call function argument 




*E*>?|?*T*|?*IF*|?*FOR*|?*IFUNC*|?*A*;?*E*
*FE*>?|*T*|*IF*|*FOR*|*A*;?*E*|?*E*
*TYPE*>int|float|bool|char
*FTYPE*>void|*TYPE*
*T*>*TYPE*&*VN*
*VN*>*ivname*?=?*A*?;?*E*|*ivname*?,?*VN*?;*E*|*ivname*?;*E*
*A*>*R**A*|return&*R*?*A*|*vname*?=?*R**A*|?%?*R**A*|?+?*R**A*|?-?*R**A*|?*?*R**A*|?/?*R**A*|?+=?*R**A*|?-=?*R**A*|?*=?*R**A*|?/=?*R**A*|?%=?*R**A*|?>?*R**A*|?<?*R**A*|?>=?*R**A*|?<=?*R**A*|?==?*R**A*|?!=?*R**A*|?
*R*>*V*|*CALL*|*vname*++|*vname*--|++*vname*|--*vname*|(?*R**A*?)*A*
*V*>*vname*|*number*
*IF*>if?(?*A*?)?{?*E*?}?*ELSE*
*ELSE*>else?{?*E*?}*E*|else?*IF*|*E**A*?
*FOR*>for?(?*T*?*A*;?*A*?)?{?*E*?}?*E*|for?(?*A*?;?*A*?;?*A*?)?{?*E*?}?*E*
*IFUNC*>*FTYPE*&*ifname*?(?*FT*?)?{?*FE*?}?*E*
*FT*>*TYPE*&*ivname*?*FT*|,?*FT*|?
*CALL*>*fname*?*CFA**A*
*CFA*>(?*A*?*CFA*|,?*A*?)|,?*A*?*CFA*|(?*A*?)

*E*>?|?*T*|?*IF*|?*FOR*|?*IFUNC*|?*A*;?*E*
*FE*>?|*T*|*IF*|*FOR*|*A*;?*E*|?*E*
*TYPE*>int|float|bool|char
*FTYPE*>void|*TYPE*
*T*>*TYPE*&*VN*
*VN*>*ivname*?=?*A*?;?*E*|*ivname*?,?*VN*?;*E*|*ivname*?;*E*
*A*>return&*A*|*CALL*|*vname*?=?*A*|*vname*++|*vname*--|++*vname*|--*vname*|*V**A*|(?*A*?)*A*|?%?*A*|?+?*A*|?-?*A*|?*?*A*|?/?*A*|?+=?*A*|?-=?*A*|?*=?*A*|?/=?*A*|?%=?*A*|?>?*A*|?<?*A*|?>=?*A*|?<=?*A*|?==?*A*|?!=?*A*|?
*V*>*vname*|*number*
*IF*>if?(?*A*?)?{?*E*?}?*ELSE*
*ELSE*>else?{?*E*?}*E*|else?*IF*|*E**A*?
*FOR*>for?(?*T*?*A*;?*A*?)?{?*E*?}?*E*|for?(?*A*?;?*A*?;?*A*?)?{?*E*?}?*E*
*IFUNC*>*FTYPE*&*ifname*?(?*FT*?)?{?*FE*?}?*E*
*FT*>*TYPE*&*ivname*?*FT*|,?*FT*|?
*CALL*>*fname*?*CFA*?*A*
*CFA*>(?*A*?*CFA*|,?*A*?)|,?*A*?*CFA*|(?*A*?)|)

